{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","alt","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttacthment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","nweetArray","docs","map","data","marginTop","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","exact","path","Profile","from","excat","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a426c9e5.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\n  appId: process.env.REACT_APP_API_ID\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const {target: {name, value}} = event;\n\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async(event) => {\n    event.preventDefault(); // I dont want the default thing to happen. let me handle that\n\n    try {\n      let data;\n      if (newAccount) { // create account\n        // createUserWithEmailAndPassword ( email :  string ,  password :  string ) : Promise < UserCredential >\n        // Promise -> await ???\n        data = await authService.createUserWithEmailAndPassword(email, password);\n      } else { // log in\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\" />\n        <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} className=\"authInput\" />\n        <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} className=\"authInput authSubmit\" />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign in\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;","import AuthForm from \"components/AuthForm\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from  \"@fortawesome/react-fontawesome\";\nimport { faTwitter, faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    // ES6 문법\n    const {\n      target: { name },\n    } = event;\n\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"3x\" style={{ marginBottom: 30 }} />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Auth; // function component\n\n// const Auth = () =>\n// export default Auth;\n// 이렇게 작성하면 다른데서 import 자동완성됨","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from  \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false); // 수정중인지 아닌지\n  const [newNweet, setNewNweet] = useState(nweetObj.text); // 수정중인 nweet\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are  you sure you want to delete this nweet?\");\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete(); // nweets/~~ : 경로 (colection/document)\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete(); // 사진 삭제\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet\n    });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {target:{value}} = event;\n    setNewNweet(value);\n  };\n\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          {isOwner && (\n            <>\n              <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                <input type=\"text\" placeholder=\"Edit your nweet\" value={newNweet} required onChange={onChange} autoFocus className=\"formInput\" />\n                <input type=\"submit\" value=\"Update\" className=\"formBtn\" />\n              </form>\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                Cancle\n              </span>\n            </>\n          )}\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} alt=\"\" />}\n          {isOwner && (\n            <div className=\"nweet__actions\"> \n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { v4 as uuidv4 } from 'uuid'; // To create a random UUID...\nimport { FontAwesomeIcon } from  \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\"); // form을 위한 state\n  const [attachment, setAttacthment] = useState(\"\"); // 첨부파일 \n\n  const onSubmit = async (event) => {\n    if (nweet === \"\") {\n      return;\n    }\n    event.preventDefault();\n\n    let attachmentUrl = \"\";\n\n    if (attachment !== \"\") {\n      // storage.Reference Google Cloud Storage object = bucket\n      const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\"); // readAsDataURL\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl\n    };\n    \n    await dbService.collection(\"nweets\").add(nweetObj);\n    setNweet(\"\");\n    setAttacthment(\"\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n\n  const onFileChange = (event) => {\n    // es6 : event.target.files 가져오기\n    const { \n      target: { files }\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    \n    reader.onloadend = (finishedEvent) => { // 파일 로딩이 끝날 때\n      const {\n        currentTarget: { result }\n      } = finishedEvent;\n      setAttacthment(result);\n    }\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachmentClick = () => setAttacthment(\"\");\n\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input value={nweet} onChange={onChange} type=\"text\" placeholder=\"What's on your mind?\" maxLength={140} className=\"factoryInput__input\" />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\"/>\n      </div>\n      <label for=\"attac-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input id=\"attac-file\" type=\"file\" accept=\"image/*\" onChange={onFileChange} style={{ opacity: 0 }} />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img src={attachment} style={{ backgroundImage: attachment }} alt=\"\" />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachmentClick}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n  </form>\n  )\n};\n\nexport default NweetFactory;","import Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\nimport { dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]); // array\n  const getNweets = async () => { // async를 써야 하므로 별도로 선언\n    const dbNweets = await dbService.collection(\"nweets\").get(); // querySnapshot\n    dbNweets.forEach((document) => {\n      const nweetObject = {\n        ...document.data(),\n        id: document.id,\n      };\n      // set에서 값대신 함수전달-> 이전값 불러오기\n      setNweets((prev) => [nweetObject, ...prev]); // 작성한 것과 이전 값들 배열로 불러오기\n    });\n  }\n\n  useEffect(() => {// component mount될 때\n    // rerender 하지 않는 방식\n    dbService.collection(\"nweets\").orderBy(\"createdAt\", \"desc\").onSnapshot(snapshot => { // onSnapshot : db 변동있을 때 알림\n      const nweetArray = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {nweets.map((nweet) => (\n          <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Home;","import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ userObj, refreshUser }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\"); // react router hook으로 이동시키기\n  };\n  // const getMyNweets = async() => {\n  //   // where로 필터링\n  //   const nweets = await dbService \n  //     .collection(\"nweets\")\n  //     .where(\"creatorId\", \"==\", userObj.uid)\n  //     .orderBy(\"createdAt\") // The query requires an index\n  //     .get();\n  // };\n  // useEffect(() => {\n  //   getMyNweets();\n  // }, [])\n  const onChange = (event) => {\n    const {\n      target: {value},\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    if (userObj.displayName !== newDisplayName) {\n      // firebase.User#updateprofile\n      await userObj.updateProfile({ \n        displayName: newDisplayName\n      });\n    }\n\n    // updateProfile refresh firebase user\n    // But Navigation is not connected firebase, is userObj\n    refreshUser();\n  };\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input onChange={onChange} type=\"text\" placeholder=\"Display Name\" value={newDisplayName} autoFocus className=\"formInput\" />\n        <input type=\"submit\" value=\"Update Profile\" className=\"formBtn\" style={{ marginTop: 10 }} />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>Log Out</span>\n    </div>\n  );\n};","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from  \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link to=\"/profile\" style={{ marginLeft: 10, display: \"flex\", flexDirection: \"column\", alignItems: \"center\", fontSize: 12 }}>\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName ? `${userObj.displayName}의 Profile` : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navigation;","import React from \"react\";\nimport { HashRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ( { isLoggedIn, userObj, refreshUser }) => {\n  // auth 여부에 따라 렌더링\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          // <> : fragment. 많은 요소 렌더시 사용\n          <div className=\"router\">\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n            <Redirect from=\"*\" to=\"/\" />\n          </div>\n        ) : (\n          <>\n            <Route excat path=\"/\">\n              <Auth />\n            </Route>\n            <Redirect from=\"*\" to=\"/\" />\n          </>\n        )}\n      </Switch>\n    </Router>\n  )\n}\n\nexport default AppRouter;","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\"; // jsconfig.json 옵션으로 Absolute Imports 가능\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  \n  useEffect(() => {\n    authService.onAuthStateChanged((user) => { // 로그인, 로그아웃, 애플리케이션 초기화\n      if (user) {\n        // 다른 곳에서 사용할 수 있도록 유저 정보 저장해두기(firebase to react)\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        }); \n      } else {\n        setUserObj(null);\n      }\n      setInit(true); // AppRouter 설정\n    });\n  }, []);\n\n  const refreshUser = () => {\n    // currentUser has too many fields\n    // 사용하는 것만 간추리기(diaplayName, uid, updateProfile)\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    }); \n  };\n\n  return (\n    <>\n      {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj} /> : \"Initializing...\"}\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}